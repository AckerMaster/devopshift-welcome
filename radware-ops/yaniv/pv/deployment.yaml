TOKENNAME=`kubectl get serviceaccount/ingress-user -o jsonpath='{.secrets[0].name}'`
TOKEN=`kubectl get secret $TOKENNAME -o jsonpath='{.data.token}' | base64 --decode`
kubectl config set-credentials ingress-user --token=$TOKEN
CONTEXT=`kubectl config current-context`
kubectl config set-context $CONTEXT --user=ingress-user

kubectl auth can-i get ingresses.networking.k8s.io --as=ingress-user -n development
kubectl auth can-i list ingresses.networking.k8s.io --as=ingress-user -n development
kubectl auth can-i watch ingresses.networking.k8s.io --as=ingress-user -n development


# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: jb-claim
#   annotations:
#     volume.beta.kubernetes.io/storage-class: "slow-io"
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 4Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: music-app-deployment
  labels:
    app: music-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: music-app
  template:
    metadata:
      labels:
        app: music-app
    spec:
      containers:
      - name: music-app
        image: yanivomc/spring-music:latest
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: "/var/www/html"
          name: pod-volume-data
      volumes:
      - name: pod-volume-data
        persistentVolumeClaim:
          claimName: mypv
