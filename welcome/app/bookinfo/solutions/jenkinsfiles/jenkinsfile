pipeline {
    agent any

    environment {
        IMAGE_NAME = 'my-docker-image'
        VERSION = "v${env.BUILD_NUMBER}"
        REPO = 'my-docker-repo'
        CREDENTIALS_ID = 'docker-credentials'
        DOCKERFFILE = 'Dockerfile'
        DOCKERFILE_DIR = './welcome/app/bookinfo/solutions/jenkinsfiles'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'jenkins-workshop', url: 'https://github.com/yanivomc/devopshift-welcome.git'
            }
        }

        stage('Build') {
            steps {
                script {
                        sh '''
                        cd ${DOCKERFILE_DIR}
                        docker build --target base --tag ${IMAGE_NAME}:${VERSION}-build .
                        '''
                    }
                }
            }
        
        stage('Parallel Test and lint') {
            parallel {
                stage('Test') {
                    steps {
                        script {
                            sh '''
                            cd ${DOCKERFILE_DIR}
                            docker build --target test --tag ${IMAGE_NAME}:${VERSION}-test .
                            docker run --rm ${IMAGE_NAME}:${VERSION}-test
                            '''
                        }
                    }
                }
                stage('lint') {
                    steps {
                        script {
                            sh '''
                            cd ${DOCKERFILE_DIR}
                            docker build --target lint --tag ${IMAGE_NAME}:${VERSION} .
                            '''
                        }
                    }
                }
            }
        }

        stage('CreateArtifact') {
            steps {
                script {
                    sh '''
                    cd ${DOCKERFILE_DIR}
                    docker build --target production --tag ${IMAGE_NAME}:${VERSION} .
                    '''
                }
            }
        }

        // stage('Push') {
        //     steps {
        //         script {
        //             docker.withRegistry("https://index.docker.io/v1/", "${CREDENTIALS_ID}") {
        //                 sh '''
        //                 echo "docker push ${REPO}/${IMAGE_NAME}:${VERSION}"
        //                 echo "docker tag ${REPO}/${IMAGE_NAME}:${VERSION} ${REPO}/${IMAGE_NAME}:latest"
        //                 echo "docker push ${REPO}/${IMAGE_NAME}:latest"
        //                 '''
        //             }
        //         }
        //     }
        // }
    }

    post {
        always {
            echo "running clean"
        }
        success {
            echo 'Docker image build, test, and push successful!'
        }
        failure {
            echo 'Docker image build, test, or push failed.'
        }
    }
}
